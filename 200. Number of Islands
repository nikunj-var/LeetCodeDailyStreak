
class Solution {
public:

void  dfs(vector<vector<char>>& grid,int i,int j,int n,int m,vector<vector<bool>>&vis){
    if(i<0||j<0||i>=n||j>=m)return;
    if(grid[i][j]=='0')return;
    if(vis[i][j])return ;
    vis[i][j]=1;
    if(i+1<n)
    dfs(grid,i+1,j,n,m,vis);
    if(j+1<m)
    dfs(grid,i,j+1,n,m,vis);
    if(i-1>=0)
    dfs(grid,i-1,j,n,m,vis);
    if(j-1>=0)
    dfs(grid,i,j-1,n,m,vis);
}
int numIslands(vector<vector<char>>& grid) {
    int res=0;
    int n=grid.size(),m=grid[0].size();
    vector<vector<bool>>vis(n,vector<bool>(m,0));
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(!vis[i][j]&&grid[i][j]=='1')dfs(grid,i,j,n,m,vis),res++;
        }
    }
    return res;
}
};
